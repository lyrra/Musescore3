name: build_macos

on:
  schedule:
    - cron: '0 4 */7 * *'
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode: devel_build, stable_build'
        required: true
        default: 'devel_build'
 
env:
  DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer

jobs:
  build:    
    runs-on: macos-latest
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
    - name: Clone repo main
      uses: actions/checkout@v4
      with:
        ref: main
        path: m
    - name: Setup
      run: |
        ls -ltr
        cd m
        ls -ltr
        sudo rm -rf "/Applications/Visual Studio.app"
        sudo rm -rf "/Applications/Visual Studio 2019.app"
        sudo rm -rf "/Users/runner/Library/Android/sdk"
        ./build/ci/macos/setup.sh
    - name: Build
      run: |
        cd m
        ./build/ci/macos/build.sh
    - name: Package 
      run: |
        S_S="${{ secrets.MAC_SIGN_CERTIFICATE_ENCRYPT_SECRET }}"; if [ -z "$S_S" ]; then S_S="''"; fi
        S_P="${{ secrets.MAC_SIGN_CERTIFICATE_PASSWORD }}"; if [ -z "$S_P" ]; then S_P="''"; fi
        cd m
        ./build/ci/macos/package.sh --signpass "$S_P" --signsecret "$S_S" 
    - name: Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-musescore3
        path: m/musescore3.tar.xz
    - name: version
      run: echo "version=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
      id: version
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-macos-${{ steps.version.outputs.version }}
        release_name: macos-${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./m/musescore3.tar.xz
        asset_name: musescore3.tar.xz
        asset_content_type: application/zip
  upload-weekly:
    permissions:
      contents: write
    needs:
      - build
    if: github.ref == 'refs/heads/main'
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: macos-musescore3*
          merge-multiple: true
      - name: Upload musescore release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload weekly-macos musescore3* --clobber -R ${{ github.repository }}
